security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        usuario_provider:
            entity:
                class: App\Entity\Usuario
                property: correo

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/  # Esto deshabilita seguridad para rutas de desarrollo
            security: false

        login:
            pattern: ^/api/login
            stateless: true  # No usar sesiones
            json_login:
                check_path: /api/login  # Ruta donde se reciben las credenciales
                username_path: correo   # Nombre del campo de correo en el body JSON
                password_path: password  # Nombre del campo de contraseña en el body JSON
                success_handler: lexik_jwt_authentication.handler.authentication_success  # Generación del JWT
                failure_handler: lexik_jwt_authentication.handler.authentication_failure  # Manejo de error

        api:
            pattern: ^/api
            stateless: true  # No usar sesiones
            provider: usuario_provider
            jwt: ~  # Configuración para manejar el JWT
            logout:
                path: /api/logout  # Ruta para manejar el logout
                # Esta opción se utiliza para invalidar tokens si estás utilizando JWT
                invalidate_session: false

        main:
            lazy: true
            provider: usuario_provider
            stateless: true  # No usar sesiones

    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }  # Permitir acceso anónimo al login
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }  # Requiere autenticación para otras rutas de la API
        - { path: ^/profile, roles: ROLE_USER }  # Ruta de perfil requiere el rol ROLE_USER
